apply plugin: 'com.android.library'

android {
    compileSdkVersion build_versions.target_sdk

    defaultConfig {
        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:design:28.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    // ========= network =========
    // - 网络请求框架 retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
    // - 网络请求 client(okHttpClient)
    implementation 'com.squareup.okhttp3:okhttp:3.12.1'
    // - 数据解析器 addConverterFactory(GsonConverterFactory.create())
    implementation 'com.squareup.retrofit2:converter-gson:2.5.0'
    // - 网络请求适配器 addCallAdapterFactory(RxJava2CallAdapterFactory.create())
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.5.0'
    // AndroidSchedulers.mainThread()
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'
    // ======= network end =======
    implementation 'com.orhanobut:logger:2.2.0'
    implementation 'com.tbruyelle.rxpermissions2:rxpermissions:0.9.3@aar'
    implementation 'com.jakewharton.rxbinding2:rxbinding:2.2.0'
    implementation 'com.github.bumptech.glide:glide:4.8.0'
}
